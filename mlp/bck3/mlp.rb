require 'rubygems'
require 'mlp'
error=''
#File.open('data/train.tmp', 'r').each_line do |line|
#  line = line.strip.split ','

a = MLP.new(:hidden_layers => [2], :output_nodes => 1, :inputs => 9)
#first = [0.006537767,0.044810944,0.08689782,0.0061291564,0.044810944,0.08689782,0.006537767,0.044810944,0.08689782]

3001.times do |i|
 #a.train([0.006537767,0.044810944,0.08689782,0.0061291564,0.044810944,0.08689782,0.006537767,0.044810944,0.08689782], [0.0])
 # a.train([0.006537767,0.044810944,0.08689782,0.0061291564,0.044810944,0.08689782,0.006537767,0.044810944,0.08689782], [0.0])
  a.train([0.003405087,0.08308413,0.041405845,0.0038136974,0.08390134,0.042495475,0.0027240697,0.08471856,0.04018002], [1.0])
  a.train([0.0014982383,0.08430995,0.042904086,0.0027240697,0.08430995,0.04481094,0.0042223078,0.08471856,0.047126393], [1.0])
  #error = a.train([0.006946377,0.04440233,0.08730643,0.006537767,0.04440233,0.08730643,0.006537767,0.04440233,0.08689782], [0.0])
#  error = a.train(first[0..8], [0])
  puts "Error after iteration #{i}:\t#{error}" if i%200 == 0

#601.times do |i|
#
#	File.open('data/train.tmp', 'r').readlines.each do |line|
#  		linee = line.strip.split ','
#		aaa = linee.map(&:to_f)
#		int = aaa[9]
#		#puts aaa
#		a.train(aaa[0..8], [int])
#		error = a.train(aaa[0..8], [int])
#	end
#  puts "Error after iteration #{i}:\t#{error}" if i%200 == 0
 #puts "Error after iteration :\t#{error}"

end

puts "Test data"
puts "[0] = > #{a.feed_forward([0.006537767,0.044810944,0.08689782,0.0061291564,0.044810944,0.08689782,0.006537767,0.044810944,0.08689782]).inspect}"
puts "[1] = > #{a.feed_forward([0.003405087,0.08308413,0.041405845,0.0038136974,0.08390134,0.042495475,0.0027240697,0.08471856,0.04018002]).inspect}"
puts "[1] = > #{a.feed_forward([-0.012258313,0.06973618,0.056252027,-0.0156634,0.08076866,0.055162396,-0.006946377,0.076954966,0.04481094]).inspect}"
puts "[0] = > #{a.feed_forward([0.033097446,-0.09139254,0.13089154,0.038954194,-0.04535576,0.043312707,0.015935807,-0.02969236,0.09220976]).inspect}"
